//smoothCaret.js made by doovid <3
function css(t,e){return window.getComputedStyle(t,null).getPropertyValue(e)}function getTextWidth(t,e){let s=document.querySelector("#sc-canvas").getContext("2d");return s.font=e,s.measureText(t).width}const styleString=".sc-container{display:grid;grid-template-columns:repeat(1,1fr);}.smoothCaretInput{grid-column:1/3;caret-color:transparent}.caret{grid-column:2/-2;align-self:center;transition:.2s;opacity: 0;}.caret,.smoothCaretInput{grid-row:1/2}",style=document.createElement("style"),canvElem=document.createElement("canvas"),passwordChar=navigator.userAgent.match(/firefox|fxios/i)?"●":"•";style.innerText=styleString,document.head.append(style),canvElem.id="sc-canvas",canvElem.style.display="none",document.body.appendChild(canvElem);let caretPosString,smoothCarets=[];class SmoothCaret{constructor(t,e,s){this.font="•"!=passwordChar||"password"!=e.type||navigator.userAgent.match(/chrome|chromium|crios/i)?`${css(e,"font-size")} ${css(e,"font-family")}`:`${parseFloat(css(e,"font-size"))+6.25}px ${css(e,"font-family")}`,this.maxMargin=parseInt(css(e.parentElement,"width"))-10,this.caretMargin=parseInt(css(e,"padding-left"))+2,this.caretWidth=parseInt(t.style.width),this.letterSpacing=parseInt(css(e,"letter-spacing"))?parseInt(css(e,"letter-spacing")):0,this.caretElem=t,this.inputElem=e,this.textWidth=void 0,this.index=s}init(){console.log(this.letterSpacing),this.inputElem.dataset.sc=this.index,this.pw_ratio="password"==this.inputElem.type?getTextWidth(passwordChar+passwordChar,this.font)-getTextWidth(passwordChar,this.font):null,this.inputElem.addEventListener("input",(t=>this.update("password"===t.target.type?Array(t.target.value.length+1).join(passwordChar):t.target.value))),this.inputElem.addEventListener("blur",(()=>{this.caretElem.style.opacity="",this.caretElem.style.transform=""}))}update(t){this.caretElem.style.opacity="1",this.textWidth=this.pw_ratio?this.pw_ratio*t.length+this.caretMargin+this.letterSpacing*(t.length-1):getTextWidth(t,this.font)>0?getTextWidth(t,this.font)+this.caretMargin+this.letterSpacing*(t.length-1):this.caretMargin-this.caretWidth/2,this.textWidth>this.maxMargin||(this.caretElem.style.transform=`translateX(${this.textWidth}px)`)}}function initsmoothCarets(){document.querySelectorAll("input.sc").forEach((t=>{const e=window.getComputedStyle(t),s=document.createElement("div");s.className="sc-container";["width","maxWidth","minWidth","flex","flexGrow","flexShrink","flexBasis","gridColumn","gridRow","gridArea","margin","position"].forEach((t=>{const r=e.getPropertyValue(t.replace(/[A-Z]/g,(t=>"-"+t.toLowerCase())));r&&"none"!==r&&"auto"!==r&&"normal"!==r&&(s.style[t]=r)})),t.style.width&&(s.style.width=t.style.width);const r=parseFloat(e.fontSize),n=e.lineHeight;let i;i="normal"===n?1.2*r:n.endsWith("px")?.9*parseFloat(n):isNaN(parseFloat(n))?1.2*r:r*parseFloat(n)*.9,i=Math.max(i,r);const a=document.createElement("div");a.className="caret",a.style.setProperty("width","2px","important"),a.style.setProperty("height",`${i}px`,"important"),a.style.setProperty("background-color","#00a6ff","important"),a.style.setProperty("padding","0","important"),a.style.setProperty("margin","0","important"),a.style.setProperty("border","none","important"),a.style.setProperty("box-sizing","content-box","important"),a.style.setProperty("font-size","inherit","important"),a.style.setProperty("font-family","inherit","important"),a.style.setProperty("line-height","normal","important"),a.style.setProperty("text-align","left","important"),a.style.setProperty("vertical-align","baseline","important"),a.style.setProperty("background-image","none","important"),a.style.setProperty("box-shadow","none","important"),a.style.setProperty("outline","none","important"),a.style.setProperty("min-width","unset","important"),a.style.setProperty("max-width","unset","important"),a.style.setProperty("min-height","unset","important"),a.style.setProperty("max-height","unset","important"),a.style.setProperty("pointer-events","none","important"),a.style.setProperty("z-index","9999999","important"),t.parentNode.insertBefore(s,t),t.style.width="100%",t.style.margin="0",s.appendChild(t),t.classList.add("smoothCaretInput"),t.classList.remove("sc"),s.appendChild(a)})),document.querySelectorAll(".sc-container").forEach(((t,e)=>{smoothCarets.push(new SmoothCaret(t.children[1],t.children[0],e)),smoothCarets[e].init()})),setInterval((()=>{document.activeElement.getAttribute("data-sc")&&(caretPosString=caretPosString="password"===document.activeElement.type?Array(document.activeElement.value.length+1).join(passwordChar).slice(0,document.activeElement.selectionStart):document.activeElement.value.slice(0,document.activeElement.selectionStart),smoothCarets[parseInt(document.activeElement.dataset.sc)].update(caretPosString))}))}initsmoothCarets();